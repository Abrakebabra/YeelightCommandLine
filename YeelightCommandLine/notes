
Do:
 - Search udp message to multicast address
 - Receive udp response from multicast address
    - Get IP Port search message was sent from
    - Listen to that IP Port for response
    - Get individual light properties
    - Create new tcp connection to each light
    - Save the light connection and properties
 - Create command functions
    - Helper functions for various RGB notations
        - Both rgb to single int, and reverse.  Maybe hex, or another format?
    - Encode JSON
    - Listen for response
        - decode JSON
    - If response received, save command to light properties
    - Music mode?  Create separate TCP connection
    - Color Flow?
 - Work on main program with commands

 - Make a readme



Fix:



Learn:

- Network classes
    - New socket and connect
    - Send and receive both UDP and TCP
    - Isolate socket from NWEndpoint.hostport
    - Listen on that port
    - Handling program flow with the network functions on a different queue/thread

 - Dispatch Queues
    - Async, sync, semaphores and QoS

 - Enumerations
    - How to use them

 - Switch Cases
    - When and how to use them

 - Structs
    - What they are, when they're used, what for

 - Error Handing and Do-Catch with Guard Try

 - Handling JSON files and nested JSON
    - https://developer.apple.com/swift/blog/?id=37

 - Closures, escaping closures and completion handlers, typealias
